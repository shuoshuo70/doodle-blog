create table user (
    user_id mediumint not null auto_increment,
    user_name varchar(30) not null,
    nick_name varchar(30),
    password varchar(50) not null,
    email varchar(50),
    create_time timestamp default current_timestamp,
    is_active boolean default true,
    primary key (user_id),
    index (user_id)
);


create table tag (
    tag_id mediumint not null auto_increment,
    tag_name varchar(30) not null,
    user_id mediumint not null,
    create_time timestamp default current_timestamp,
    primary key (tag_id),
    index (user_id),
    foreign key (user_id) references user(user_id) ON UPDATE CASCADE ON DELETE RESTRICT
);


create table category (
    category_id mediumint not null auto_increment,
    user_id mediumint not null,
    category_name varchar(30) not null,
    primary key (category_id),
    index (user_id),
    foreign key (user_id) references user(user_id) ON UPDATE CASCADE ON DELETE RESTRICT
);


create table article (
    article_id mediumint not null auto_increment,
    author_id mediumint not null,
    tag_ids varchar(100),
    category_id mediumint not null,
    title varchar(300) not null,
    create_time timestamp default current_timestamp,
    is_deleted boolean default false,
    primary key (article_id),
    index (author_id),
    index (category_id),
    foreign key (author_id) references user(user_id) ON UPDATE CASCADE ON DELETE RESTRICT,
    foreign key (category_id) references category(category_id) ON UPDATE CASCADE ON DELETE RESTRICT
);


create table article_detail (
    article_detail_id mediumint not null auto_increment,
    article_id mediumint not null,
    content text,
    likes int not null default 0,
    hits int not null default 0,
    modify_time timestamp,
    primary key (article_detail_id),
    foreign key (article_id) references article (article_id) ON UPDATE CASCADE ON DELETE RESTRICT,
    index (article_id)
);


create table comment (
    comment_id mediumint not null auto_increment,
    commenter_id mediumint not null,
    article_id mediumint not null,
    content text,
    create_time timestamp default current_timestamp,
    is_deleted boolean default false,
    primary key (comment_id),
    foreign key (commenter_id) references user (user_id) ON UPDATE CASCADE ON DELETE RESTRICT,
    foreign key (article_id) references article (article_id) ON UPDATE CASCADE ON DELETE RESTRICT,
    index (article_id)
);



create table event (
    event_id int not null auto_increment,
    event_name varchar(100) not null,
    primary key (event_id)
);


create table event_log (
    log_id mediumint not null auto_increment,
    event_id int not null,
    user_id mediumint not null,
    create_time timestamp default current_timestamp,
    primary key (log_id),
    foreign key (user_id) references user (user_id) ON UPDATE CASCADE ON DELETE RESTRICT
);
